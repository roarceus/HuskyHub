/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.StudentRole;

import Business.EcoSystem;
import Business.Enterprise.CollegeStoreEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.UniversityHousingEnterprise;
import Business.Network.Network;
import Business.Organization.FoodStoreOrganization;
import Business.Organization.InventoryOrganization;
import Business.Organization.Organization;
import Business.Organization.StationeryStoreOrganization;
import Business.Store.Items;
import Business.Student.Student;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DormInventoryWorkRequest;
import Business.WorkQueue.FoodStoreWorkRequest;
import Business.WorkQueue.WorkRequest;
import Business.utilities.tableHeaderColors;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author spkot
 */
public class StudentFoodStoreJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private EcoSystem business;
    private Enterprise enterprise;
    private int cartCount = 0;
    private String total;
    private int itemCount = 0;
    private ArrayList<Items> cusList;
    private ArrayList<Items> histList;
    private Student student;
    private Network network;

    /**
     * Creates new form StudentFoodStoreJPanel
     */
    public StudentFoodStoreJPanel(JPanel userProcessContainer, Student student, EcoSystem system, UserAccount userAccount, Enterprise enterprise, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.student = student;
        this.business = system;
        this.enterprise = enterprise;
        this.network = network;
        this.cusList = new ArrayList<>();
        this.histList = new ArrayList<>();
        dormInventoryTbl.getTableHeader().setDefaultRenderer(new tableHeaderColors());
        invoiceTbl.getTableHeader().setDefaultRenderer(new tableHeaderColors());
        histTbl.getTableHeader().setDefaultRenderer(new tableHeaderColors());
        histItemTbl.getTableHeader().setDefaultRenderer(new tableHeaderColors());

        populateFoodMenuItems();
        populateRequests();
    }

    private void populateFoodMenuItems() {
        DefaultTableModel dtm = (DefaultTableModel) dormInventoryTbl.getModel();
        dtm.setRowCount(0);
        for (Network net : business.getNetworkList()) {
            for (Enterprise e : net.getEnterpriseDirectory().getEnterpriseList()) {
                if (e.getFoodInventoryList() == null) {
                    continue;
                }
                for (Items i : e.getFoodInventoryList()) {
                    Object row[] = new Object[3];
                    row[0] = i;
                    row[1] = i.getPrice();
                    row[2] = "1";
                    dtm.addRow(row);
                }
            }
        }
    }

    private void populateRequests() {
        DefaultTableModel dtm1 = (DefaultTableModel) histTbl.getModel();
        dtm1.setRowCount(0);
        for (Network net : business.getNetworkList()) {
            for (Enterprise e : net.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                    if (!(o instanceof FoodStoreOrganization)) {
                        continue;
                    }
                    for (WorkRequest request : o.getWorkQueue().getWorkRequestList()) {
                        if (request.getSender().getStudent().equals(this.student)) {
                            Object row[] = new Object[5];
                            row[0] = request.getRequestID();
                            row[1] = request.getRequestDate();
                            row[2] = request;
                            row[3] = ((FoodStoreWorkRequest) request).getTotalBill();
                            row[4] = request.getStatus();
                            dtm1.addRow(row);
                        }

                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backBtn = new javax.swing.JButton();
        tabbedPaneCustom1 = new userinterface.tabbedPaneCustom.TabbedPaneCustom();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dormInventoryTbl = new javax.swing.JTable();
        addToCartBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        invoiceTbl = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentNotes = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        totBillTxt = new javax.swing.JTextField();
        delCartBtn = new javax.swing.JButton();
        placeOrderBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        histTbl = new javax.swing.JTable();
        addToCartHistBtn = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        histItemTbl = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 51, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        backBtn.setBackground(new java.awt.Color(204, 204, 204));
        backBtn.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        backBtn.setForeground(new java.awt.Color(51, 51, 51));
        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(951, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        tabbedPaneCustom1.setBackground(new java.awt.Color(0, 51, 51));

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));

        dormInventoryTbl.setBackground(new java.awt.Color(204, 204, 204));
        dormInventoryTbl.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        dormInventoryTbl.setForeground(new java.awt.Color(51, 51, 51));
        dormInventoryTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(dormInventoryTbl);

        addToCartBtn.setBackground(new java.awt.Color(102, 255, 255));
        addToCartBtn.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        addToCartBtn.setForeground(new java.awt.Color(51, 51, 51));
        addToCartBtn.setText("Add To Cart");
        addToCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartBtnActionPerformed(evt);
            }
        });

        invoiceTbl.setBackground(new java.awt.Color(204, 204, 204));
        invoiceTbl.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        invoiceTbl.setForeground(new java.awt.Color(51, 51, 51));
        invoiceTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(invoiceTbl);

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Message:");

        studentNotes.setBackground(new java.awt.Color(204, 204, 204));
        studentNotes.setColumns(20);
        studentNotes.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        studentNotes.setForeground(new java.awt.Color(51, 51, 51));
        studentNotes.setRows(5);
        jScrollPane2.setViewportView(studentNotes);

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Total Price:");

        totBillTxt.setEditable(false);
        totBillTxt.setBackground(new java.awt.Color(204, 204, 204));
        totBillTxt.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        totBillTxt.setForeground(new java.awt.Color(51, 51, 51));

        delCartBtn.setBackground(new java.awt.Color(255, 51, 51));
        delCartBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        delCartBtn.setForeground(new java.awt.Color(51, 51, 51));
        delCartBtn.setText("Delete From Cart");
        delCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delCartBtnActionPerformed(evt);
            }
        });

        placeOrderBtn.setBackground(new java.awt.Color(102, 255, 255));
        placeOrderBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        placeOrderBtn.setForeground(new java.awt.Color(51, 51, 51));
        placeOrderBtn.setText("Place Order");
        placeOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeOrderBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 255, 255));
        jLabel1.setText("Food Menu :");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 255, 255));
        jLabel2.setText("Your Cart :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(addToCartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(totBillTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(delCartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(placeOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(192, 192, 192))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(totBillTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delCartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(placeOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(addToCartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        tabbedPaneCustom1.addTab("Order Food", jPanel2);

        jPanel3.setBackground(new java.awt.Color(0, 51, 51));

        histTbl.setBackground(new java.awt.Color(204, 204, 204));
        histTbl.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        histTbl.setForeground(new java.awt.Color(51, 51, 51));
        histTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Ordered Date", "Message", "Total Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(histTbl);

        addToCartHistBtn.setBackground(new java.awt.Color(204, 204, 204));
        addToCartHistBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        addToCartHistBtn.setForeground(new java.awt.Color(51, 51, 51));
        addToCartHistBtn.setText("Show Items");
        addToCartHistBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartHistBtnActionPerformed(evt);
            }
        });

        histItemTbl.setBackground(new java.awt.Color(204, 204, 204));
        histItemTbl.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        histItemTbl.setForeground(new java.awt.Color(51, 51, 51));
        histItemTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(histItemTbl);

        jLabel5.setBackground(new java.awt.Color(102, 255, 255));
        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Order History Details");

        jLabel6.setBackground(new java.awt.Color(102, 255, 255));
        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Your Order History");

        btnRefresh.setBackground(new java.awt.Color(204, 204, 204));
        btnRefresh.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(51, 51, 51));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(addToCartHistBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(57, 57, 57)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addToCartHistBtn)
                    .addComponent(btnRefresh))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        tabbedPaneCustom1.addTab("View Orders", jPanel3);

        add(tabbedPaneCustom1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 1080, 500));
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void addToCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = dormInventoryTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            String quantity = dormInventoryTbl.getValueAt(selectedRow, 2).toString();
            if (!isNumber(quantity)) {
                JOptionPane.showMessageDialog(null, "Please enter number only in quantity", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Items i = (Items) dormInventoryTbl.getValueAt(selectedRow, 0);
            i.setQuantity(Integer.parseInt(quantity));
            cartCount++;
            cusList.add(i);
            this.total = populateTable();
            totBillTxt.setText(this.total);
            JOptionPane.showMessageDialog(null, "Added to cart successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addToCartBtnActionPerformed

    private void delCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delCartBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = invoiceTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            Items i = (Items) invoiceTbl.getValueAt(selectedRow, 0);
            cusList.remove(i);
            this.total = populateTable();
            totBillTxt.setText(this.total);

        }
    }//GEN-LAST:event_delCartBtnActionPerformed

    private void placeOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeOrderBtnActionPerformed
        // TODO add your handling code here:
        if (invoiceTbl.getRowCount() > 0 && cartCount > 0) {
            FoodStoreWorkRequest request = new FoodStoreWorkRequest();
            request.setFoodRequestList(cusList);
            request.setSender(userAccount);
            request.setStatus("Order Placed");
            request.setTotalBill(Integer.parseInt(totBillTxt.getText()));
            request.setMessage(studentNotes.getText());
            Organization org = null;
            for (Network net : business.getNetworkList()) {
                for (Enterprise enter : net.getEnterpriseDirectory().getEnterpriseList()) {
                    if (enter instanceof CollegeStoreEnterprise) {
                        for (Organization organization : enter.getOrganizationDirectory().getOrganizationList()) {
                            if (organization instanceof FoodStoreOrganization) {
                                org = organization;
                                break;
                            }
                        }
                    }
                }
            }

            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
                JOptionPane.showMessageDialog(null, "Order placed successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please add the menus to the cart to place the order.", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
    }//GEN-LAST:event_placeOrderBtnActionPerformed

    private void addToCartHistBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartHistBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = histTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            WorkRequest i = (WorkRequest) histTbl.getValueAt(selectedRow, 2);
            histList = ((FoodStoreWorkRequest) i).getFoodRequestList();
            DefaultTableModel dtm = (DefaultTableModel) histItemTbl.getModel();
            dtm.setRowCount(0);
            for (int d = 0; d < histList.size(); d++) {
                Object row[] = new Object[3];

                row[0] = histList.get(d).getItemName();
                row[1] = histList.get(d).getPrice();
                row[2] = histList.get(d).getQuantity();
                dtm.addRow(row);
            }
        }
    }//GEN-LAST:event_addToCartHistBtnActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateRequests();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToCartBtn;
    private javax.swing.JButton addToCartHistBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton delCartBtn;
    private javax.swing.JTable dormInventoryTbl;
    private javax.swing.JTable histItemTbl;
    private javax.swing.JTable histTbl;
    private javax.swing.JTable invoiceTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton placeOrderBtn;
    private javax.swing.JTextArea studentNotes;
    private userinterface.tabbedPaneCustom.TabbedPaneCustom tabbedPaneCustom1;
    private javax.swing.JTextField totBillTxt;
    // End of variables declaration//GEN-END:variables

    private void populateRequestTable(String name) {
        DefaultTableModel dtm = (DefaultTableModel) dormInventoryTbl.getModel();
        dtm.setRowCount(0);
        for (Enterprise e : business.getEnterpriseDirectory().getEnterpriseList()) {
            if (name == String.valueOf(e)) {
                for (Items item : e.getFoodInventoryList()) {
                    Object row[] = new Object[2];
                    row[0] = item;
                    row[1] = item.getPrice();
                    dtm.addRow(row);
                }
            }

        }
    }

    public String populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) invoiceTbl.getModel();
        dtm.setRowCount(0);
        int totalBill = 0;
        for (int i = itemCount; i < cusList.size(); i++) {
            Object row[] = new Object[2];
            Items item = cusList.get(i);
            row[0] = item;
            row[1] = Integer.toString(item.getPrice()) + '(' + Integer.toString(item.getQuantity()) + ')';
            totalBill = totalBill + item.getPrice() * item.getQuantity();
            dtm.addRow(row);
        }

        return String.valueOf(totalBill);
    }

    public boolean isNumber(String name) {
        return name.matches("^[0-9]*$");
    }
}
